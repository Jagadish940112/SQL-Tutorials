Note: You can't use window functions and standard aggregations in the same query. More specifically, you can't include window functions in a GROUP BY clause.

-- Create an additional column named max_salary showing the MAX(salary) to each records/rows.
-- MAX(salary) is treated as a window function instead of aggregate becauses of OVER() and wont reduce the number of records/rows.
SELECT *,
MAX(salary) OVER() AS max_salary
FROM employee

-- Create an additional column named max_salary showing the MAX(salary) from "the dept_name" to each record/rows.
-- PARTITION BY behaves similarly like GROUP BY except it is used with OVER().
SELECT *,
MAX(salary) OVER(PARTITION BY dept_name) AS max_salary
FROM employee


-- PARTITION BY is Optional
-- ORDER BY is Mandatory
ROW_NUMBER ( ) OVER ( [ PARTITION BY value_expression , ... [ n ] ] ORDER BY ...)

SELECT *,
ROW_NUMBER() OVER(PARTITION BY dept_name ORDER BY emp_ID) AS rownumber -- rownumber will reset when dept_name changes
FROM employee

SELECT *
FROM (Query) x
WHERE x.rownumber < 3


abc
