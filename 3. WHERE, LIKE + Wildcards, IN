/*
WHERE statement acts a filter
=, <>, <, >, AND, OR, LIKE, NULL, NOT NULL, IN
*/

SELECT *
FROM EmployeeDemographics
WHERE FirstName = 'Jim' -- equal to

SELECT *
FROM EmployeeDemographics
WHERE FirstName <> 'Jim' -- does not equal to

SELECT *
FROM EmployeeDemographics
WHERE Age > 30 -- greater than, >= greater than equal to

SELECT *
FROM EmployeeDemographics
WHERE Age <= 32 AND Gender = 'Male' -- AND combined multiple conditions, OR either one

SELECT *
FROM EmployeeDemographics
WHERE LastName LIKE 'S%' -- where LastName starts with a S, refer LIKE & Wildcards for more

WHERE CustomerName LIKE '%or%' -- "or" in any position
-------------------------------------------------------------------------------------------
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group" LIKE 'Snoop%'

Note: "group" appears in quotations above because GROUP is actually the name of a function in SQL.
The double quotes (as opposed to single: ') are a way of indicating that you are referring to the column name "group", not the SQL function.
In general, putting double quotes around a word or phrase will indicate that you are referring to that column name.

SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE "group" ILIKE 'snoop%'

LIKE is case-sensitive, meaning that the above query will only capture matches that start with a capital "S" and lower-case "noop."
To ignore case when you're matching values, you can use the ILIKE command: #ILIKE only availabe in PostgreSQL
--------------------------------------------------------------------------------------------
SELECT *
FROM EmployeeDemographics
WHERE FirstName is NULL -- FirstName is empty/no values

SQL IN Operator
Allows you to specify multiple values in a WHERE clause. ACT as multiple OR conditions

Selects all customers that are located in "Germany", "France", or "UK"
SELECT *
FROM Customers
WHERE Country IN ('Germany','France','UK')
